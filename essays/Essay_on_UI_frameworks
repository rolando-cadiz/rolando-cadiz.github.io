---
layout: essay
type: essay
title: "UI/UX Framesworks Are Easy But Hard"
# All dates must be YYYY-MM-DD format!
date: 2025-02-27
published: true
labels:
  - UI/UX
  - Frameworks
  - Bootstrap
  - CSS
  - HTML
---
<img width="300px" class="rounded float-start pe-4" src="../img/UIUX.png">
## Introduction
My journey of learning new programming languages has led me through various OOP and function-based languages, and they all felt mostly the same as each other; however
having recently picked up HTML, CSS, and frameworks like Bootstrap 5, I can say that these are a whole new different kind of hard. At first, HTML seemed fairly simple.
You structured blocks of code and wrote whatever you wanted to appear on your website. The difficulty started to arise with structuring the code in a legible way to anyone who worked on the code. Then came the CSS, another layer of complication. Now, we can style our fonts and pages! Do you want an image of a cat
for the background of your webpage? No problem! Finally came Bootstrap 5. Honestly, I like it because it's useful. But as a HTML noob, it's a bit overwhelming. It's akin 
to being given a giant toolbox full of every tool you could ever need or want without knowing how to use any of them.

<img width="300px" class="rounded float-start pe-4" src="../img/htmlwithcss.png">
## Why Not Just HTML and CSS?
Alright, it's understood that designing webpages can be hard. So, why don't we just skip the frameworks and use HTML alongside CSS for all our web development needs? Well you totally can! 
The catch is that it's just not efficient and leads to headaches and heartbreak (well, maybe less heartbreak and more stress). There are a few issues with only
using HTML/CSS. First, creating meaningful modern webpages is difficult due to having to manually create everything from sizing, spacing, and style. Two, it's not scalable.
When you start implementing custom functions and as your codebase grows, some things may not interact with each other as expected. This leads to more time wasted debugging instead
of creating. And three, it's redundant. Frameworks have everything you could need, so why try to re-create them? Would you try to build a wrench when you could just buy one?

## UI/UX Design Complexities
Designing a website can be as complex as you want it to be. If you want many features, you must find an efficient design layout to implement these features while making
the flow smooth for the end user. Need to make the page visually appealing? Then, be prepared for an exponential increase in difficulty. In the early days of the internet,
most webpages looked quite basic, running off of pure HTML. You could easily throw up a webpage, and it could become popular. Now, in the modern era, web pages are complex
monstrosities of clickable buttons, banners, colors, pictures/videos, and links. Pure HTML just doesn't have the tools necessary to code modern web pages.

<img width="300px" class="rounded float-start pe-4" src="../img/bootstrap.png">
## Frameworks: A Useful Tool
Bootstrap 5 is an example of a framework for UI/UX web development. It is undeniably useful, but it is also difficult to learn. Frameworks, in general, are great for
speedy web development, cutting out hours of manual work. Bootstraps Grid System proves useful for placing content exactly where you want on a page, but with so many options,
one must study up on the documentation to use it efficiently. The mobile-first design that many frameworks have makes designing pages for mobile devices and other portable computers 
extremely easy. Classes such as "container-fluid" automatically size themselves to fit whatever size screen the user might use. In terms of development, frameworks are meant to be
easily maintainable and scalable. This could mean the difference between a simple re-factoring and rebuilding a whole codebase.


